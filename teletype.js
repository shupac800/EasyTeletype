/* In your HTML file:
   (1) create a <div> element with the ID "tty-text" --
       this is where output generated by the teletype will be displayed.
   (2) add a <script> tag pointing to jQuery, e.g.
       <script src="https://code.jquery.com/jquery-1.12.4.min.js">
   (3) add a <script> tag pointing to this .js file
*/

// sample JavaScript for demo:
var inputArray = [ "Lorem ipsum dolor sit amet,",
                   "consectetur adipisicing elit.",
                   "Delectus quos quas qui!",
                   "Ad enim accusantium,",
                   "corrupti soluta consequatur delectus",
                   "assumenda eaque facilis repellat doloremque",
                   "nemo consectetur totam veritatis voluptates sint?" ];
teletype(inputArray);  // teletype function will print whatever lines are contained in inputArray


function teletype(inputArray) {
  // for each line in inputArray, compute the time it's going to take to display each line.
  // for each line, construct a setTimeout function where the delay is cumulative, based on time it
  // takes to execute each of the previous lines, plus delays.
  // each object in array "ttyObject" will hold key-value pairs needed by "outputString" function 

  const initialDelay = 600;       // ms before outputting first line
  const charDelay = 10;           // delay in ms after each character
  const delayBetweenLines = 600;  // delay between lines, in ms

  var ttyObject = [];  // initialize empty array
  ttyObject[0] = {outputAfterMs: initialDelay};  // initialize first array element; first output happens after initial delay 
  var timeElapsed = initialDelay;

  for (var i = 0; i < inputArray.length; i++) {
    // add new k:v pairs to ttyObject[i] object
    ttyObject[i].index = i;
    ttyObject[i].chars = inputArray[i].length;
    ttyObject[i].text  = inputArray[i];
    ttyObject[i].time  = ttyObject[i].chars * charDelay;   // time it takes to output this text
    timeElapsed += ttyObject[i].time + delayBetweenLines;  // add delay period to total time elapsed
    ttyObject[i + 1] = {outputAfterMs: timeElapsed};       // initialize next array element; next line will output after this many ms

    // use IIFE to schedule future events with values bound to present context
    (function(i, charDelay) {
      setTimeout(function() {
        outputString(ttyObject[i].text, charDelay);
      }, ttyObject[i].outputAfterMs);
    })(i, charDelay);

  }
}


function outputString(str, charDelay) {
  var s_out = $("#tty-text").html() + "<p>";  // output will be displayed in DOM element with ID "tty-text"
  var i = 0;

  var intervalID = setInterval(function(){
    s_out += str.charAt(i);  // after each interval, add one character from str to s_out
    $("#tty-text").html(s);
    if (i++ === str.length) {
      $("#tty-text").html(s_out + "</p>");
      clearInterval(intervalID);
      return;
    }
  }, charDelay);

}